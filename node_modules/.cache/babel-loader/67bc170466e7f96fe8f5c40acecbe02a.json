{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cenkerkaraors/GitHubCK/GameShopReact/src/Components/SignUp.js\";\nimport React, { Component } from 'react';\nimport data from \"../Data/data.json\";\nimport { useHistory } from \"react-router-dom\";\nimport * as functions from \"../functions\";\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Row, InputGroup } from 'reactstrap';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      let email = this.state.email;\n      let password = this.state.password;\n      let rePassword = this.state.rePassword;\n      let firstName = this.state.firstName;\n      let lastName = this.state.lastName;\n\n      if (!email.includes('@')) {\n        alert(\"Please enter a valid e-mail.\");\n      } else if (!email.includes(\"edu.tr\") && !email.includes(\"email.com\") && !email.includes(\"gmail.com\")) {\n        alert(\"Please enter edu.tr, gmail.com or email.com\");\n      } else if (password.length < 6 || rePassword.length < 6) {\n        alert(\"Password size shoul be at least 6.\");\n      } else if (!hasUpperCase(password) || !hasUpperCase(rePassword)) {\n        alert(\"Passwords should include at least on upper case\");\n      } else if (password !== rePassword) {\n        alert(\"Passwords do not match.\");\n      } else {\n        var current_list = localStorage.getItem(\"user_list\");\n\n        if (current_list == null) {\n          var user_list = [];\n          user_list.push([email + \";\" + password + \";\" + firstName + \";\" + lastName]);\n          localStorage.setItem(\"user_list\", user_list);\n        } else {\n          var existing_list = current_list.split(\",\");\n          var new_list = [];\n          var isNew = 1;\n\n          for (var i = 0; i < existing_list.length; i++) {\n            var temp_user = existing_list[i].split(\";\");\n            new_list.push([existing_list[i]]);\n            if (temp_user[0] === email) isNew = 0;\n          }\n\n          if (isNew) {\n            new_list.push([email + \";\" + password + \";\" + firstName + \";\" + lastName]);\n            localStorage.setItem(\"user_list\", new_list);\n          } else alert(\"This user already exists.\");\n        }\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      rePassword: '',\n      firstName: '',\n      lastName: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Re-Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"rePassword\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction hasUpperCase(str) {\n  return str.match(/[A-Z]/);\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/home/cenkerkaraors/GitHubCK/GameShopReact/src/Components/SignUp.js"],"names":["React","Component","data","useHistory","functions","Container","Col","Form","FormGroup","Label","Input","Button","Row","InputGroup","SignUp","constructor","props","mySubmitHandler","event","preventDefault","email","state","password","rePassword","firstName","lastName","includes","alert","length","hasUpperCase","current_list","localStorage","getItem","user_list","push","setItem","existing_list","split","new_list","isNew","i","temp_user","myChangeHandler","nam","target","name","val","value","setState","render","str","match"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from \"../Data/data.json\";\nimport {useHistory} from \"react-router-dom\";\nimport * as functions from \"../functions\";\n\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button, Row, InputGroup,\n} from 'reactstrap';\n\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      rePassword: '',\n      firstName: '',\n      lastName: ''\n    };\n\n\n\n  }\n\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n\n\n    let email = this.state.email;\n    let password = this.state.password;\n    let rePassword = this.state.rePassword\n    let firstName = this.state.firstName;\n    let lastName = this.state.lastName;\n\n\t\tif(!email.includes('@')){\n\t\t\talert(\"Please enter a valid e-mail.\")\n\t\t}\n\t\telse if(!email.includes(\"edu.tr\") && !email.includes(\"email.com\") && !email.includes(\"gmail.com\")){\n\t\t\talert(\"Please enter edu.tr, gmail.com or email.com\")\n\t\t}\n\t\telse if(password.length < 6 || rePassword.length < 6) {\n\t\t\talert(\"Password size shoul be at least 6.\")\n\t\t}\n\t\telse if(!hasUpperCase(password) || !hasUpperCase(rePassword)) {\n\t\t\talert(\"Passwords should include at least on upper case\")\n\t\t}\n\t    else if(password !== rePassword){\n\t\t\talert(\"Passwords do not match.\")\n    }\n    else {\n\n      var current_list = localStorage.getItem(\"user_list\");\n\n      if(current_list == null)\n      {\n        var user_list = [];\n        user_list.push([email+ \";\" + password + \";\" + firstName + \";\" + lastName]);\n        localStorage.setItem(\"user_list\", user_list);\n      }\n\n      else\n      {\n        var existing_list = current_list.split(\",\");\n        var new_list = [];\n\n\n        var isNew = 1;\n\n        for(var i=0; i<existing_list.length; i++)\n        {\n          var temp_user = existing_list[i].split(\";\");\n          new_list.push([existing_list[i]]);\n\n          if(temp_user[0] === email) isNew = 0;\n\n        }\n\n\n        if(isNew)\n        {\n          new_list.push([email+ \";\" + password + \";\" + firstName + \";\" + lastName]);\n          localStorage.setItem(\"user_list\", new_list);\n        }\n\n        else alert(\"This user already exists.\");\n      }\n\n    }\n\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n\n      <h2>Register User</h2>\n\n      <p>Email:</p>\n\n      <input type='text' name='email' onChange={this.myChangeHandler} />\n\n      <p>Password</p>\n      <input type='password' name='password' onChange={this.myChangeHandler} />\n      \n      <p>Re-Password</p>\n      <input type='password' name='rePassword' onChange={this.myChangeHandler} />\n\n      <p>First Name</p>\n      <input type='text' name='firstName' onChange={this.myChangeHandler} />\n\n      <p>Last Name</p>\n      <input type='text' name='lastName' onChange={this.myChangeHandler} />      \n\n      <br/><br/>\n\n      <input type='submit' />\n\n      </form>\n    );\n  }\n}\n\nfunction hasUpperCase(str) {\n  return str.match(/[A-Z]/);\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}