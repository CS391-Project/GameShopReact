{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cenkerkaraors/GitHubCK/GameShopReact/src/Components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport data from \"../Data/data.json\";\nimport { useHistory } from \"react-router-dom\";\nimport * as functions from \"../functions\";\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Row, InputGroup } from 'reactstrap';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      let email = this.state.email;\n      let password = this.state.password;\n      let rePassword = this.state.rePassword;\n      let firstName = this.state.firstName;\n      let lastName = this.state.lastName;\n\n      if (!email.includes('@')) {\n        alert(\"Please enter a valid e-mail.\");\n      } else if (!email.includes(\"edu.tr\") && !email.includes(\"email.com\") && !email.includes(\"gmail.com\")) {\n        alert(\"Please enter edu.tr, gmail.com or email.com\");\n      } else if (password.length < 6 || rePassword.length < 6) {\n        alert(\"Password size shoul be at least 6.\");\n      } else if (!hasUpperCase(password) || !hasUpperCase(rePassword)) {\n        alert(\"Passwords should include at least on upper case\");\n      } else if (password !== rePassword) {\n        alert(\"Passwords do not match.\");\n      } else {\n        var current_list = localStorage.getItem(\"user_list\");\n\n        if (current_list == null) {\n          var user_list = [];\n          user_list.push(email + \";\" + password + \";\" + firstName + \";\" + lastName);\n          localStorage.setItem(\"user_list\", user_list);\n        } else {\n          var existing_list = current_list.split(\",\");\n          var isNew = 1;\n          console.log(existing_list);\n\n          for (var i = 0; i < existing_list.length; i++) {\n            var temp_user = existing_list[i].split(\";\");\n            if (temp_user[0] === email) isNew = 0;\n          }\n\n          console.log(isNew);\n\n          if (isNew) {\n            existing_list.push(email + \";\" + password + \";\" + firstName + \";\" + lastName);\n            localStorage.setItem(\"user_list\", user_list);\n          } else alert(\"This user already exists.\");\n        }\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      rePassword: '',\n      firstName: '',\n      lastName: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.state.username, \" \", this.state.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Re-Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"rePassword\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction hasUpperCase(str) {\n  return str.match(/[A-Z]/);\n}\n\nconst MyForm = () => {\n  _s();\n\n  const history = useHistory();\n\n  const goToPage = pageName => history.push(pageName);\n\n  const productData = data.productList;\n\n  const goToLoginPage = () => {\n    goToPage('Login');\n  };\n\n  const goToShopPage = () => {\n    goToPage('');\n  };\n\n  const validate = (mail, pass1, pass2) => {\n    if (!mail.includes('@')) {\n      alert(\"Please enter a valid e-mail.\");\n    } else if (!mail.includes(\"edu.tr\") && !mail.includes(\"email.com\") && !mail.includes(\"gmail.com\")) {\n      alert(\"Please enter edu.tr, gmail.com or email.com\");\n    } else if (pass1.length < 6 || pass2.length < 6) {\n      alert(\"Password size shoul be at least 6.\");\n    } else if (!hasUpperCase(pass1) || !hasUpperCase(pass2)) {\n      alert(\"Passwords should include at least on upper case\");\n    } else if (pass1 !== pass2) {\n      alert(\"Passwords do not match.\");\n    } else {\n      goToShopPage();\n    }\n  };\n\n  function hasUpperCase(str) {\n    return str.match(/[A-Z]/);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"SignUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            id: \"exampleEmail1\",\n            placeholder: \"myemail@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"examplePassword1\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password1\",\n            id: \"examplePassword1\",\n            placeholder: \"********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"examplePassword2\",\n            children: \"Re-type Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password2\",\n            id: \"examplePassword2\",\n            placeholder: \"********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"fullWidth\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => validate(document.getElementById('exampleEmail1').value, document.getElementById('examplePassword1').value, document.getElementById('examplePassword2').value),\n            className: \"mt-3 btn btn-info btn-product text-nowrap\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => goToLoginPage(),\n            className: \"mt-3 btn btn-success btn-product text-nowrap\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MyForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyForm;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/cenkerkaraors/GitHubCK/GameShopReact/src/Components/SignUp.js"],"names":["React","Component","data","useHistory","functions","Container","Col","Form","FormGroup","Label","Input","Button","Row","InputGroup","SignUp","constructor","props","mySubmitHandler","event","preventDefault","email","state","password","rePassword","firstName","lastName","includes","alert","length","hasUpperCase","current_list","localStorage","getItem","user_list","push","setItem","existing_list","split","isNew","console","log","i","temp_user","myChangeHandler","nam","target","name","val","value","setState","render","username","age","str","match","MyForm","history","goToPage","pageName","productData","productList","goToLoginPage","goToShopPage","validate","mail","pass1","pass2","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from \"../Data/data.json\";\nimport {useHistory} from \"react-router-dom\";\nimport * as functions from \"../functions\";\n\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button, Row, InputGroup,\n} from 'reactstrap';\n\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      rePassword: '',\n      firstName: '',\n      lastName: ''\n    };\n\n\n\n  }\n\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n\n\n    let email = this.state.email;\n    let password = this.state.password;\n    let rePassword = this.state.rePassword\n    let firstName = this.state.firstName;\n    let lastName = this.state.lastName;\n\n\t\tif(!email.includes('@')){\n\t\t\talert(\"Please enter a valid e-mail.\")\n\t\t}\n\t\telse if(!email.includes(\"edu.tr\") && !email.includes(\"email.com\") && !email.includes(\"gmail.com\")){\n\t\t\talert(\"Please enter edu.tr, gmail.com or email.com\")\n\t\t}\n\t\telse if(password.length < 6 || rePassword.length < 6) {\n\t\t\talert(\"Password size shoul be at least 6.\")\n\t\t}\n\t\telse if(!hasUpperCase(password) || !hasUpperCase(rePassword)) {\n\t\t\talert(\"Passwords should include at least on upper case\")\n\t\t}\n\t    else if(password !== rePassword){\n\t\t\talert(\"Passwords do not match.\")\n    }\n    else {\n\n      var current_list = localStorage.getItem(\"user_list\");\n\n      if(current_list == null)\n      {\n        var user_list = [];\n        user_list.push(email+ \";\" + password + \";\" + firstName + \";\" + lastName);\n        localStorage.setItem(\"user_list\", user_list);\n      }\n\n      else\n      {\n        var existing_list = current_list.split(\",\");\n        var isNew = 1;\n\n        console.log(existing_list);\n\n        for(var i=0; i<existing_list.length; i++)\n        {\n          var temp_user = existing_list[i].split(\";\");\n\n          if(temp_user[0] === email) isNew = 0;\n\n        }\n\n        console.log(isNew);\n\n        if(isNew)\n        {\n          existing_list.push(email+ \";\" + password + \";\" + firstName + \";\" + lastName);\n          localStorage.setItem(\"user_list\", user_list);\n        }\n\n        else alert(\"This user already exists.\");\n      }\n\n\n\n    }\n\n\n\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n\n      <h1>Hello {this.state.username} {this.state.age}</h1>\n\n      <p>Email:</p>\n\n      <input type='text' name='email' onChange={this.myChangeHandler} />\n\n      <p>Password</p>\n      <input type='text' name='password' onChange={this.myChangeHandler} />\n      \n      <p>Re-Password</p>\n      <input type='text' name='rePassword' onChange={this.myChangeHandler} />\n\n      <p>First Name</p>\n      <input type='text' name='firstName' onChange={this.myChangeHandler} />\n\n      <p>Last Name</p>\n      <input type='text' name='lastName' onChange={this.myChangeHandler} />      \n\n      <br/><br/>\n\n      <input type='submit' />\n\n      </form>\n    );\n  }\n}\n\nfunction hasUpperCase(str) {\n  return str.match(/[A-Z]/);\n}\n\n\nconst MyForm = () => {\n  const history = useHistory();\n    const goToPage = (pageName) => history.push(pageName);\n    const productData = data.productList;\n\n    const goToLoginPage = () => {\n        goToPage('Login')\n    }\n\t\n\t const goToShopPage = () => {\n        goToPage('')\n    }\n\t\n\tconst validate = (mail, pass1, pass2) => {\n\t\tif(!mail.includes('@')){\n\t\t\talert(\"Please enter a valid e-mail.\")\n\t\t}\n\t\telse if(!mail.includes(\"edu.tr\") && !mail.includes(\"email.com\") && !mail.includes(\"gmail.com\")){\n\t\t\talert(\"Please enter edu.tr, gmail.com or email.com\")\n\t\t}\n\t\telse if(pass1.length < 6 || pass2.length < 6) {\n\t\t\talert(\"Password size shoul be at least 6.\")\n\t\t}\n\t\telse if(!hasUpperCase(pass1) || !hasUpperCase(pass2)) {\n\t\t\talert(\"Passwords should include at least on upper case\")\n\t\t}\n\t    else if(pass1 !== pass2){\n\t\t\talert(\"Passwords do not match.\")\n\t\t}\n\t\telse {\n\n\t\t\tgoToShopPage()\n\t\t}\n    }\n\t\n\tfunction hasUpperCase(str) {\n\t\treturn str.match(/[A-Z]/);\n\t}\n\t\n    return (\n      <Container className=\"SignUp\">\n        <h2>Sign In</h2>\n        <Form className=\"form\">\n          <Col>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail1\"\n                placeholder=\"myemail@email.com\"\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword1\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password1\"\n                id=\"examplePassword1\"\n                placeholder=\"********\"\n              />\n            </FormGroup>\n          </Col>\n\t\t  <Col>\n            <FormGroup>\n              <Label for=\"examplePassword2\">Re-type Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password2\"\n                id=\"examplePassword2\"\n                placeholder=\"********\"\n              />\n            </FormGroup>\n          </Col>\n          <Row className='fullWidth'>\n\t\t\t\t<Col md=\"6\">\n\t\t\t\t\t<Button onClick={() => validate(document.getElementById('exampleEmail1').value, document.getElementById('examplePassword1').value, document.getElementById('examplePassword2').value)} className=\"mt-3 btn btn-info btn-product text-nowrap\" >Sign Up</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"6\">\n\t\t\t\t\t<Button onClick={() => goToLoginPage()} className=\"mt-3 btn btn-success btn-product text-nowrap\">Login</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n        </Form>\n      </Container>\n    );\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}